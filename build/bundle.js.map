{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/WebHandler.js","../../src/LoginScreen.svelte","../../src/visuals/game.js","../../src/visuals/Canvas.svelte","../../src/visuals/Grid.svelte","../../src/visuals/Background.svelte","../../src/visuals/Room.svelte","../../src/visuals/Hover.svelte","../../src/visuals/Door.svelte","../../src/DungeonView.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport { game, addPlayer, showRoom, showDoor, removePlayer, hideDoor, hideRoom };\r\n\r\nconst game = writable({id: -1});\r\nfunction addPlayer(playerName) {\r\n  game.update(g => {\r\n    g.playerNames.push(playerName);\r\n    return g;\r\n  });\r\n}\r\n\r\nfunction showRoom(room) {\r\n  game.update(g => {\r\n    if(g.thisPlayer.isMaster) {\r\n      let r = g.dungeon.rects.find(r => r.x == room.x && r.y == room.y && r.w == room.w && r.h == room.h);\r\n      r.visible = room.visible;\r\n    } else {\r\n      g.dungeon.rects = [...g.dungeon.rects, room];\r\n    }\r\n    return g;\r\n  });\r\n}\r\n\r\nfunction hideRoom(room) {\r\n  game.update(g => {\r\n    if(g.thisPlayer.isMaster) {\r\n      let r = g.dungeon.rects.find(r => r.x == room.x && r.y == room.y && r.w == room.w && r.h == room.h);\r\n      r.visible = room.visible;\r\n    } else {\r\n      let roomIndex = g.dungeon.rects.findIndex(r => r.x == room.x && r.y == room.y && r.w == room.w && r.h == room.h);\r\n      if(roomIndex >= 0) g.dungeon.rects.splice(roomIndex, 1);\r\n    }\r\n    return g;\r\n  });\r\n}\r\n\r\nfunction showDoor(room) {\r\n  game.update(g => {\r\n    if(!g.thisPlayer.isMaster) {\r\n      g.dungeon.doors = [...g.dungeon.doors, room];\r\n    }\r\n    return g;\r\n  });\r\n}\r\n\r\nfunction hideDoor(door) {\r\n  game.update(g => {\r\n    if(!g.thisPlayer.isMaster) {\r\n      let doorIndex = g.dungeon.doors.findIndex(e=>e.x === door.x && e.y === door.y);\r\n      if(doorIndex >= 0) g.dungeon.doors.splice(doorIndex, 1);\r\n\r\n    }\r\n    return g;\r\n  });\r\n}\r\n\r\nfunction removePlayer(user) {\r\n  game.update(g => {\r\n    g.playerNames.splice(g.playerNames.indexOf(user), 1);\r\n    return g;\r\n  });\r\n}\r\n","const host  = \"vast-cliffs-53607.herokuapp.com\";\r\nconst port = 52832;\r\nconst webSocketPort = 8080;\r\n\r\nlet socketConnection;\r\n\r\nfunction sendRequest(data) {\r\n  return new Promise(function (resolve, reject) {\r\n    let xmlhttp = new XMLHttpRequest();\r\n\r\n      xmlhttp.onload = function () {\r\n        var status = xmlhttp.status;\r\n        if (status == 200) {\r\n            resolve(JSON.parse(xmlhttp.responseText));\r\n        } else {\r\n          reject(status);\r\n        }\r\n        console.log(status);\r\n      };\r\n\r\n     xmlhttp.open(\"POST\", `https://${host}`, true);\r\n     xmlhttp.setRequestHeader(\"Content-type\", \"application/json\");\r\n     xmlhttp.send(data);\r\n  })\r\n}\r\n\r\nfunction createGame(gameName, masterName) {\r\n  let data = {\r\n    action: \"createGame\",\r\n    gameName: gameName,\r\n    masterName: masterName\r\n  }\r\n\r\n  return sendRequest(JSON.stringify(data));\r\n}\r\n\r\nfunction joinGame(gameID, playerName) {\r\n  let data = {\r\n    action: \"joinGame\",\r\n    gameID: gameID,\r\n    playerName: playerName\r\n  }\r\n\r\n  return sendRequest(JSON.stringify(data));\r\n}\r\n\r\nimport { get } from 'svelte/store';\r\nimport { game, addPlayer, showRoom, showDoor, removePlayer, hideRoom, hideDoor } from './stores.js';\r\n\r\nfunction openSocket(gameID, playerID) {\r\n  socketConnection = new WebSocket(`ws://${host}`, ['soap', 'xmpp']);\r\n    socketConnection.onopen = function () {\r\n      let data = {action: \"register\", pid: playerID, gid: gameID};\r\n      socketConnection.send(JSON.stringify(data));\r\n    };\r\n\r\n    socketConnection.onmessage = function (e) {\r\n      let data = JSON.parse(e.data);\r\n      console.log(data);\r\n      if(data.action === \"userJoined\") {\r\n        addPlayer(data.user);\r\n      } else if(data.action === \"showRoom\") {\r\n        showRoom(data.room);\r\n      } else if(data.action === \"showDoor\") {\r\n        showDoor(data.door)\r\n      } else if(data.action === \"kick\") {\r\n        socketConnection.close();\r\n      } else if(data.action === \"ping\") {\r\n        let gameID = get(game).id;\r\n        let playerID = get(game).thisPlayer.id;\r\n        let data = {action: \"pong\", pid: playerID, gid: gameID};\r\n        socketConnection.send(JSON.stringify(data));\r\n      } else if(data.action === \"userLeft\") {\r\n        removePlayer(data.user);\r\n      } else if(data.action === \"hideDoor\") {\r\n        hideDoor(data.door);\r\n      } else if(data.action === \"hideRoom\") {\r\n        hideRoom(data.room)\r\n      }\r\n    };\r\n}\r\n\r\nfunction sendShowRoom(room, gid, pid) {\r\n  let data = {action: \"showRoom\", room: room, pid: pid, gid: gid }\r\n  let dataStr = JSON.stringify(data);\r\n  if(socketConnection) socketConnection.send(dataStr);\r\n}\r\n\r\nfunction sendShowDoor(room, gid, pid) {\r\n  let data = {action: \"showDoor\", door: room, pid: pid, gid: gid }\r\n  let dataStr = JSON.stringify(data);\r\n  if(socketConnection) socketConnection.send(dataStr);\r\n}\r\n\r\nfunction sendHideRoom(room, gid, pid) {\r\n  let data = {action: \"hideRoom\", room: room, pid: pid, gid: gid }\r\n  let dataStr = JSON.stringify(data);\r\n  if(socketConnection) socketConnection.send(dataStr);\r\n}\r\n\r\nfunction sendHideDoor(room, gid, pid) {\r\n  let data = {action: \"hideDoor\", door: room, pid: pid, gid: gid }\r\n  let dataStr = JSON.stringify(data);\r\n  if(socketConnection) socketConnection.send(dataStr);\r\n}\r\n\r\nexport { createGame, openSocket, joinGame, sendShowRoom, sendShowDoor, sendHideRoom, sendHideDoor };\r\n","<script>\r\nimport { createGame, openSocket, joinGame } from './WebHandler.js';\r\nimport { game } from './stores.js';\r\n\r\nlet gameName = \"\";\r\nlet playerName = \"\";\r\n\r\nasync function clickCreate() {\r\n\tlet answer = await createGame(gameName, playerName);\r\n\r\nconsole.log(answer);\r\n\tif(!answer.isError) {\r\n\t\t$game = {id: answer.game.id, name: answer.game.name, playerNames: [{name: playerName, isMaster: true, isYou: true}], thisPlayer: { id: answer.player.id, name: playerName, isMaster: true, isYou: true }, dungeon: answer.dungeon};\r\n\t\topenSocket($game.id, $game.thisPlayer.id);\r\n\t} else {\r\n\t\talert(answer.error);\r\n\t}\r\n}\r\n\r\n\tasync function clickJoin() {\r\n\t\tlet answer = await joinGame(gameName, playerName);\r\n\r\n\t\tconsole.log(answer);\r\n\t\tif(!answer.isError) {\r\n\t\t\t$game = {id: answer.id, name: answer.gameName, playerNames: answer.player, thisPlayer: { id: answer.playerID, name: playerName, isMaster: false, isYou: true }, dungeon: answer.dungeon};\r\n\t\t\topenSocket($game.id, $game.thisPlayer.id);\r\n\t\t} else {\r\n\t\t\talert(answer.error);\r\n\t\t}\r\n}\r\n</script>\r\n\r\n<div class=\"main card\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\">\r\n\t  <input placeholder=\"Enter Game Name\" class=\"is-rounded\" bind:value={gameName} />\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\">\r\n\t\t\t<input placeholder=\"Enter your Name\" class=\"is-rounded\" bind:value={playerName} />\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-2\">\r\n\t\t\t<button class=\"button is-full-width\" on:click={clickJoin}> Join Game </button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"col-2\">\r\n\t\t\t<button class=\"button primary is-full-width\" on:click={clickCreate}> Create Game </button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n.main {\r\n\twidth: 75%;\r\n\tmargin-top: 32px;\r\n\tmargin-left: auto;\r\n  margin-right: auto;\r\n\tbackground: var(--bg-secondary-color);\r\n}\r\n</style>\r\n","import { getContext, onMount, onDestroy } from 'svelte';\r\nimport { writable, derived } from 'svelte/store';\r\n\r\n// Some props for the app\r\nexport const width = writable(window.innerWidth);\r\nexport const height = writable(window.innerHeight);\r\nexport const pixelRatio = writable(window.devicePixelRatio);\r\nexport const context = writable();\r\nexport const canvas = writable();\r\nexport const cam = writable({dx: 0, dy: 0});\r\nexport const time = writable(0);\r\nexport const tileSize = writable(32);\r\nexport const colors = writable({\r\n\tbackground: \"#0E0E0E\",\r\n\trooms: \"#EEEEEE\"\r\n})\r\n\r\n\r\n// A more convenient store for grabbing all game props\r\nexport const props = deriveObject({\r\n\tcontext,\r\n\tcanvas,\r\n\twidth,\r\n\theight,\r\n\tpixelRatio,\r\n\ttime,\r\n});\r\n\r\nexport const key = Symbol();\r\n\r\nexport const getState = () => {\r\n\tconst api = getContext(key);\r\n\treturn api.getState();\r\n};\r\n\r\nexport const renderable = (render) => {\r\n\tconst api = getContext(key);\r\n\tconst element = {\r\n\t\tready: false,\r\n\t\tmounted: false\r\n\t};\r\n\tif (typeof render === 'function') {\r\n\t\telement.render = render;\r\n\t\telement.height = 0;\r\n\t} else if (render) {\r\n\t\tif (render.render) element.render = render.render;\r\n\t\tif (render.setup) element.setup = render.setup;\r\n\t\tif (render.height) element.height = render.height;\r\n\t}\r\n\tapi.add(element);\r\n\tonMount(() => {\r\n\t\telement.mounted = true;\r\n\t\treturn () => {\r\n\t\t\tapi.remove(element);\r\n\t\t\telement.mounted = false;\r\n\t\t};\r\n\t});\r\n}\r\n\r\nfunction deriveObject (obj) {\r\n\tconst keys = Object.keys(obj);\r\n\tconst list = keys.map(key => {\r\n\t\treturn obj[key];\r\n\t});\r\n\treturn derived(list, (array) => {\r\n\t\treturn array.reduce((dict, value, i) => {\r\n\t\t\tdict[keys[i]] = value;\r\n\t\t\treturn dict;\r\n\t\t}, {});\r\n\t});\r\n}\r\n","<script>\r\n\timport { onMount, onDestroy, setContext } from 'svelte';\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\timport {\r\n\t\tkey,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tcanvas as canvasStore,\r\n\t\tcontext as contextStore,\r\n\t\tpixelRatio,\r\n\t\tprops,\r\n\t\ttime,\r\n\t\ttileSize,\r\n\t\tcam,\r\n\t} from './game.js';\r\n\r\n\texport let killLoopOnError = true;\r\n\texport let attributes = {};\r\n\r\n\tlet clickStart;\r\n\tlet mouseDown = false;\r\n\tlet mouseX = 0;\r\n\tlet mouseY = 0;\r\n\r\n\tlet listeners = [];\r\n\tlet canvas;\r\n\tlet context;\r\n\tlet frame;\r\n\r\n\tonMount(() => {\r\n\t\t// prepare canvas stores\r\n\t\tcontext = canvas.getContext('2d', attributes);\r\n\t\tcanvasStore.set(canvas);\r\n\t\tcontextStore.set(context);\r\n\r\n\t\t// start game loop\r\n\t\treturn createLoop((elapsed, dt) => {\r\n\t\t\ttime.set(elapsed);\r\n\t\t\trender(dt);\r\n\t\t});\r\n\t});\r\n\r\n\tsetContext(key, {\r\n\t\tadd (fn) {\r\n\t\t\tthis.remove(fn);\r\n\t\t\tlisteners.push(fn);\r\n\r\n\t\t\tif (fn.setup) {\r\n\t\t\t\tlet p = fn.setup($props);\r\n\t\t\t\tif (p && p.then) p;\r\n\t\t\t}\r\n\t\t\tfn.ready = true;\r\n\r\n\t\t\tlisteners.sort((e1, e2) => e1.height - e2.height);\r\n\t\t},\r\n\t\tremove (fn) {\r\n\t\t\tconst idx = listeners.indexOf(fn);\r\n\t\t\tif (idx >= 0) listeners.splice(idx, 1);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction render (dt) {\r\n\t\tcontext.save();\r\n\r\n\t\tcontext.translate(-$cam.dx, -$cam.dy);\r\n\t\tcontext.scale($pixelRatio, $pixelRatio);\r\n\t\tlisteners.forEach(entity => {\r\n\t\t\ttry {\r\n\t\t\t\tif (entity.mounted && entity.ready && entity.render) {\r\n\t\t\t\t\tentity.render($props, dt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\tif (killLoopOnError) {\r\n\t\t\t\t\tcancelAnimationFrame(frame);\r\n\t\t\t\t\tconsole.warn('Animation loop stopped due to an error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tcontext.restore();\r\n\t}\r\n\r\n\tfunction handleResize () {\r\n\t\twidth.set(window.innerWidth);\r\n\t\theight.set(window.innerHeight);\r\n\t\tpixelRatio.set(window.devicePixelRatio);\r\n\t}\r\n\r\n\tfunction createLoop (fn) {\r\n\t\tlet elapsed = 0;\r\n\t\tlet lastTime = performance.now();\r\n\t\t(function loop() {\r\n\t\t\tframe = requestAnimationFrame(loop);\r\n\t\t\tconst beginTime = performance.now();\r\n\t\t\tconst dt = (beginTime - lastTime) / 1000;\r\n\t\t\tlastTime = beginTime;\r\n\t\t\telapsed += dt;\r\n\t\t\tfn(elapsed, dt);\r\n\t\t})();\r\n\t\treturn () => {\r\n\t\t\tcancelAnimationFrame(frame);\r\n\t\t};\r\n\t}\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\tfunction handleMouseUp(ev) {\r\n\t\tmouseDown = false;\r\n\r\n\t\tlet x = ev.x + $cam.dx/$pixelRatio;\r\n\t\tlet y = ev.y + $cam.dy/$pixelRatio;\r\n\r\n\t\tlet timeDis = Date.now() - clickStart;\r\n\r\n\t\tlet data = {\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\ttileX: x / $tileSize,\r\n\t\t\ttileY: y / $tileSize\r\n\t\t}\r\n\t\tif(timeDis < 200) dispatch('click', data);\r\n\t}\r\n\r\n\tfunction handleMouseMove(event) {\r\n\t\tif(mouseDown) {\r\n\t\t\t$cam = {\r\n\t\t\t\tdx: $cam.dx + (mouseX - event.clientX) * $pixelRatio,\r\n\t\t\t\tdy: $cam.dy + (mouseY - event.clientY) * $pixelRatio\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmouseX = event.clientX;\r\n\t\tmouseY = event.clientY;\r\n\t}\r\n\r\n\tfunction handleMouseDown(event) {\r\n\t\tmouseDown = true;\r\n\t\tclickStart = Date.now();\r\n\t}\r\n</script>\r\n\r\n<canvas\r\n\ton:mousemove={handleMouseMove}\r\n\ton:mousedown={handleMouseDown}\r\n\ton:mouseup={handleMouseUp}\r\n\tbind:this={canvas}\r\n\twidth={$width * $pixelRatio}\r\n\theight={$height * $pixelRatio}\r\n\tstyle=\"width: {$width}px; height: {$height}px;\"\r\n/>\r\n<svelte:window on:resize|passive={handleResize} />\r\n<slot></slot>\r\n\r\n<style>\r\n\r\n\r\n</style>\r\n","<script>\r\n\timport { renderable, tileSize, height, width, cam, pixelRatio, colors } from './game.js';\r\n\r\n\texport let color = $colors.background + '6';\r\n\r\n\trenderable({\r\n\t\trender: props => {\r\n\t\t\tconst { context, width, height } = props;\r\n\t\t\tcontext.save();\r\n\r\n\t\t\tlet pr = $pixelRatio;\r\n\r\n\t\t\tlet dx = $cam.dx / pr;\r\n\t\t\tlet dy = $cam.dy / pr;\r\n\t\t\tlet w = width;\r\n\t\t\tlet h = height;\r\n\r\n\t\t\tlet offX = dx / $tileSize;\r\n\t\t\tif(offX < 0) offX = Math.floor(offX);\r\n\t\t\telse offX = Math.ceil(offX);\r\n\r\n\t\t\tlet offY = dy / $tileSize;\r\n\t\t\tif(offY < 0) offY = Math.floor(offY);\r\n\t\t\telse offY = Math.ceil(offY);\r\n\r\n\t\t\tfor(let x = Math.min(0, offX); x < Math.max(0, offX) + w / $tileSize; x++) {\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.strokeStyle = color;\r\n\t\t\t\tcontext.moveTo(x * $tileSize, dy);\r\n\t\t\t\tcontext.lineTo(x * $tileSize, h + dy);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tfor(let y = Math.min(0, offY); y < Math.max(0, offY) + h / $tileSize; y++) {\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.strokeStyle = color;\r\n\t\t\t\tcontext.moveTo(dx, y * $tileSize);\r\n\t\t\t\tcontext.lineTo(dx + w, y * $tileSize);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tcontext.restore();\r\n\t\t}, height: 3\r\n\t});\r\n</script>\r\n\r\n<!-- The following allows this component to nest children -->\r\n<slot></slot>\r\n","<script>\r\n\timport { renderable, colors, cam, pixelRatio } from './game.js';\r\n\tlet color = $colors.background + \"F\";\r\n\r\n\trenderable(props => {\r\n\t\tconst { context, width, height } = props;\r\n\r\n\t\tcontext.save();\r\n\t\tlet pr = $pixelRatio;\r\n\r\n\t\tcontext.clearRect($cam.dx/ pr, $cam.dy/ pr, width, height);\r\n\t\tif (color) {\r\n\t\t\tcontext.fillStyle = color;\r\n\t\t\tcontext.fillRect($cam.dx/ pr, $cam.dy/ $pixelRatio, width, height);\r\n\t\t}\r\n\r\n\t\tcontext.restore();\r\n\t});\r\n</script>\r\n\r\n<!-- The following allows this component to nest children -->\r\n<slot></slot>\r\n","<script>\r\n\timport { renderable, width, height, tileSize, colors } from './game.js';\r\n\r\n\tlet color = '#F8F8F4';\r\n\texport let dimension;\r\n\r\n\trenderable({\r\n\t\trender: (props, dt) => {\r\n\t\t\tconst { context, width, height } = props;\r\n\t\t\tcontext.save();\r\n\r\n\t\t\tif(dimension) {\r\n\t\t\t\tlet x = dimension.x * $tileSize;\r\n\t\t\t\tlet y = dimension.y * $tileSize;\r\n\t\t\t\tlet w = dimension.w * $tileSize;\r\n\t\t\t\tlet h = dimension.h * $tileSize;\r\n\r\n\t\t\t\tif(!dimension.rotunda) {\r\n\t\t\t\t\tcontext.fillStyle = $colors.rooms;\r\n\t\t\t\t\tcontext.fillRect(x, y, w, h);\r\n\t\t\t\t\tif(!dimension.visible) {\r\n\t\t\t\t\t\tcontext.fillStyle = dimension.visible? '#0F06': '#F006';\r\n\t\t\t\t\t\tcontext.fillRect(x, y, w, h);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontext.beginPath();\r\n\t\t\t\t\tcontext.fillStyle = $colors.rooms;\r\n\t\t\t\t\tcontext.ellipse(x + w/2, y + h/2, w/2, h/2, 0, 0, Math.PI * 2);\r\n\t\t\t\t\tcontext.closePath();\r\n\t\t\t\t\tcontext.fill();\r\n\t\t\t\t\tcontext.beginPath();\r\n\t\t\t\t\tif(!dimension.visible) {\r\n\t\t\t\t\t\tcontext.fillStyle = dimension.visible? '#0F06': '#F006';\r\n\t\t\t\t\t\tcontext.ellipse(x + w/2, y + h/2, w/2, h/2, 0, 0, Math.PI * 2);\r\n\t\t\t\t\t\tcontext.closePath();\r\n\t\t\t\t\t\tcontext.fill();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcontext.restore();\r\n\t\t}, height: 1\r\n\t});\r\n</script>\r\n","<script>\r\n\timport { renderable, width, height, tileSize } from './game.js';\r\n\r\n\texport let color = '#F8F8F4';\r\n\texport let dimension;\r\n\r\n\trenderable({\r\n\t\trender: (props, dt) => {\r\n\t\t\tconst { context, width, height } = props;\r\n\t\t\tcontext.save();\r\n\r\n\t\t\tif(dimension) {\r\n\t\t\t\tcontext.strokeStyle = '#FF0';\r\n\t      context.lineWidth = 3;\r\n\t\t\t\tcontext.strokeRect(dimension.x * $tileSize, dimension.y * $tileSize, dimension.w * $tileSize, dimension.h * $tileSize);\r\n\t      context.lineWidth = 1;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.restore();\r\n\t\t}, height: 4\r\n\t});\r\n</script>\r\n","<script>\r\n\timport { renderable, width, height, tileSize, colors } from './game.js';\r\n\r\n\texport let dimension;\r\n\r\n\trenderable({\r\n\t\trender: (props, dt) => {\r\n\t\t\tconst { context, width, height } = props;\r\n\t\t\tcontext.save();\r\n\r\n\t\t\tif(dimension) {\r\n\t\t\t\tif(dimension.type > 0) {\r\n\t\t\t\t\tif(dimension.type == 1) {\t//Normal Door\r\n\t\t\t\t\t\tdrawSmallWay(context);\r\n\t\t\t\t\t\tdrawDoor(context, 1);\r\n\t\t\t\t\t} else if(dimension.type == 2) {\t//Smaller Way\r\n\t\t\t\t\t\tdrawSmallWay(context);\r\n\t\t\t\t\t} else if(dimension.type == 3) {\t//STAIR UP\r\n\t\t\t\t\t\t\tdrawStair(context);\r\n\t\t\t\t\t} else if(dimension.type == 4){\t//??\r\n\r\n\t\t\t\t\t} else if(dimension.type == 5) {\t//DOUBLE DOOR\r\n\t\t\t\t\t\tdrawSmallWay(context);\r\n\t\t\t\t\t\tdrawDoor(context, 5);\r\n\t\t\t\t\t} else if(dimension.type == 6) {\t//HIDDEN\r\n\t\t\t\t\t\tdrawHidden(context);\r\n\t\t\t\t\t} else if(dimension.type == 7) {\t//GITTER TÜR ?\r\n\t\t\t\t\t\tdrawSmallWay(context);\r\n\t\t\t\t\t\tdrawDoor(context, 1);\r\n\t\t\t\t\t} else if(dimension.type == 8) {\t//STAIR DOWN\r\n\t\t\t\t\t\tdrawStair(context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcontext.restore();\r\n\t\t}, height: 2\r\n\t});\r\n\r\n\tfunction drawSmallWay(context) {\r\n\t\tcontext.fillStyle = $colors.background;\r\n\r\n\t\tlet x = dimension.x * $tileSize;\r\n\t\tlet y = dimension.y * $tileSize;\r\n\t\tlet w = $tileSize;\r\n\t\tlet h = $tileSize;\r\n\r\n\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\th /= 2;\r\n\t\t\ty += h/2;\r\n\t\t\tw = $tileSize / 8;\r\n\t\t} else {\r\n\t\t\tw /= 2;\r\n\t\t\tx += w/2;\r\n\t\t\th = $tileSize / 8;\r\n\t\t}\r\n\r\n\t\tcontext.fillRect(x, y, w, h);\r\n\r\n\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\tx += $tileSize - w;\r\n\t\t} else {\r\n\t\t\ty += $tileSize - h;\r\n\t\t}\r\n\r\n\t\tcontext.fillRect(x, y, w, h);\r\n\t}\r\n\r\n\tfunction drawDoor(context, style) {\r\n\t\tcontext.strokeStyle = $colors.background;\r\n\r\n\t\tlet x = dimension.x * $tileSize;\r\n\t\tlet y = dimension.y * $tileSize;\r\n\t\tlet w = $tileSize;\r\n\t\tlet h = $tileSize;\r\n\r\n\t\tif(style == 1) {\r\n\t\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\t\th /= 4;\r\n\t\t\t\ty += h * 1.5;\r\n\t\t\t} else {\r\n\t\t\t\tw /= 4;\r\n\t\t\t\tx += w * 1.5;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.strokeRect(x, y, w, h);\r\n\t\t} else if(style == 5) {\r\n\t\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\t\th /= 4;\r\n\t\t\t\ty += h * 1.5;\r\n\t\t\t\tw /= 2;\r\n\t\t\t} else {\r\n\t\t\t\tw /= 4;\r\n\t\t\t\tx += w * 1.5;\r\n\t\t\t\th /= 2;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.strokeRect(x, y, w, h);\r\n\r\n\t\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\t\tx += w;\r\n\t\t\t} else {\r\n\t\t\t\ty+= h;\r\n\t\t\t}\r\n\t\t\tcontext.strokeRect(x, y, w, h);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawHidden(context) {\r\n\t\tcontext.fillStyle = $colors.background;\r\n\r\n\t\tlet x = dimension.x * $tileSize;\r\n\t\tlet y = dimension.y * $tileSize;\r\n\t\tlet w = $tileSize;\r\n\t\tlet h = $tileSize;\r\n\r\n\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\th /= 2;\r\n\t\t\tif(dimension.dir.y == -1) y += h;\r\n\t\t} else {\r\n\t\t\tw /= 2;\r\n\t\t\tif(dimension.dir.x == -1) x += w;\r\n\t\t}\r\n\r\n\t\tcontext.fillRect(x, y, w, h);\r\n\t}\r\n\r\n\tfunction drawStair(context) {\r\n\t\tcontext.fillStyle = $colors.background;\r\n\r\n\t\tlet x = dimension.x * $tileSize;\r\n\t\tlet y = dimension.y * $tileSize;\r\n\t\tlet w = $tileSize;\r\n\t\tlet h = $tileSize;\r\n\r\n\t\tlet lineCount = 4;\r\n\t\tlet lineLength = 0.8 * $tileSize;\r\n\t\tlet lineDistance = $tileSize / 5;\r\n\r\n\t\tif(Math.abs(dimension.dir.x) == 1) {\r\n\t\t\tif(dimension.dir.x == -1) {\r\n\t\t\t\tx += $tileSize;\r\n\t\t\t\tlineDistance *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tfor(let i = 0; i < lineCount; i++){\r\n\t\t\t\tx += lineDistance;\r\n\r\n\t\t\t\tcontext.moveTo(x, y + ($tileSize - lineLength)/2);\r\n\t\t\t\tcontext.lineTo(x, y + ($tileSize - lineLength)/2 + lineLength );\r\n\r\n\t\t\t\tlineLength = 0.8 * lineLength\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(Math.abs(dimension.dir.y) == 1) {\r\n\t\t\t\tif(dimension.dir.y == -1) {\r\n\t\t\t\t\ty += $tileSize;\r\n\t\t\t\t\tlineDistance *= -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let i = 0; i < lineCount; i++){\r\n\t\t\t\t\ty += lineDistance;\r\n\r\n\t\t\t\t\tcontext.moveTo(x + ($tileSize - lineLength)/2, y);\r\n\t\t\t\t\tcontext.lineTo(x + ($tileSize - lineLength)/2 + lineLength , y);\r\n\r\n\t\t\t\t\tlineLength = 0.8 * lineLength\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcontext.stroke();\r\n\t}\r\n</script>\r\n","<script>\r\n  import { game } from './stores.js';\r\n  import { sendShowRoom, sendShowDoor, sendHideDoor, sendHideRoom } from './WebHandler.js';\r\n  import Canvas from './visuals/Canvas.svelte';\r\n  import Grid from './visuals/Grid.svelte';\r\n  import Background from './visuals/Background.svelte';\r\n  import Room from './visuals/Room.svelte';\r\n  import Hover from './visuals/Hover.svelte';\r\n  import Door from './visuals/Door.svelte';\r\n  import { tileSize, cam, pixelRatio } from './visuals/game.js';\r\n\r\n  let files;\r\n  let hover = {x: 0, y: 0, w: 1, h: 1};\r\n  $: {\r\n      if (files && files[0]) {\r\n          let binfile = files[0];\r\n          let reader = new FileReader();\r\n          reader.onload = function(evt) {\r\n              let dungeon = JSON.parse(reader.result);\r\n\r\n              let minX = 0;\r\n            \tlet minY = 0;\r\n\r\n            \tlet hover = {x: 0, y: 0, w: 1, h: 1};\r\n\r\n            \tfor(let i in dungeon.rects) {\r\n            \t\tlet room = dungeon.rects[i];\r\n\r\n            \t\tif(room.x < minX) minX = room.x\r\n            \t\tif(room.y < minY) minY = room.y\r\n            \t}\r\n\r\n            \tminX -= 1;\r\n            \tminY -= 1;\r\n\r\n            \tfor(let i in dungeon.rects) {\r\n            \t\tlet room = dungeon.rects[i];\r\n\r\n            \t\troom.x -= minX;\r\n            \t\troom.y -= minY;\r\n\r\n            \t\troom.visible = false;\r\n            \t}\r\n\r\n            \tfor(let i in dungeon.doors) {\r\n            \t\tlet room = dungeon.doors[i];\r\n\r\n            \t\troom.x -= minX;\r\n            \t\troom.y -= minY;\r\n            \t}\r\n              $game.dungeon = dungeon;\r\n              $game.dungeon.init = true;\r\n          }\r\n          reader.readAsText(binfile);\r\n      }\r\n  }\r\n\r\n  function copyToClipboard() {\r\n    var dummy = document.createElement(\"textarea\");\r\n    document.body.appendChild(dummy);\r\n    dummy.value = $game.id;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n  }\r\n\r\n  function onClick(ev) {\r\n\t\tlet data = ev.detail;\r\n\t\tlet room = $game.dungeon.rects.find(room => data.tileX >= room.x && data.tileX < room.x + room.w && data.tileY >= room.y && data.tileY <= room.y + room.h);\r\n    let door = $game.dungeon.doors.find(room => Math.floor(data.tileX) == room.x && Math.floor(data.tileY) == room.y);\r\n\r\n\t\tif(room) {\r\n      if(!room.visible) {\r\n        sendShowRoom(room, $game.id, $game.thisPlayer.id);\r\n        if(door) sendShowDoor(door, $game.id, $game.thisPlayer.id);\r\n      } else {\r\n        sendHideRoom(room, $game.id, $game.thisPlayer.id);\r\n        if(door) sendHideDoor(door, $game.id, $game.thisPlayer.id);\r\n      }\r\n    }\r\n\t}\r\n\r\n\tfunction mousemove(ev) {\r\n\t\tlet mouse = {x: (ev.clientX + $cam.dx/$pixelRatio) / $tileSize, y: ((ev.clientY+$cam.dy/$pixelRatio)) / $tileSize}\r\n\t\thover = $game.dungeon.rects.find(room => mouse.x >= room.x && mouse.x < room.x + room.w && mouse.y >= room.y && mouse.y <= room.y + room.h);\r\n  }\r\n</script>\r\n\r\n<div class=\"info\">\r\n  <div class=\"card\">\r\n    <button class=\"button icon-only\" on:click={ copyToClipboard }>\r\n      <img alt=\"Copy Game Link\" src=\"https://icongr.am/feather/copy.svg?size=12\">\r\n    </button>\r\n    <b> { $game.name } </b><br>\r\n\r\n      {#each $game.playerNames as player}\r\n        <span class:text-primary={ player.isYou }> { player.name } { player.isMaster? \"(Master)\": \"\"} </span><br>\r\n      {/each}\r\n\r\n  </div>\r\n  {#if $game.thisPlayer.isMaster && !$game.dungeon.init}\r\n    <input class=\"button primary\" type=\"file\" bind:files />\r\n  {/if}\r\n</div>\r\n\r\n\r\n{#if $game.dungeon.init}\r\n<div id=\"canvasDisplay\" on:mousemove={mousemove}>\r\n  <Canvas on:click={onClick}>\r\n  <Background>\r\n  </Background>\r\n\r\n\r\n  {#each $game.dungeon.rects as room}\r\n    <Room dimension={room} />\r\n  {/each}\r\n\r\n  {#each $game.dungeon.doors as room}\r\n    <Door bind:dimension={room} />\r\n  {/each}\r\n\r\n  <Grid />\r\n    {#if $game.thisPlayer.isMaster}\r\n      <Hover bind:dimension={hover} />\r\n    {/if}\r\n  </Canvas>\r\n</div>\r\n{/if}\r\n\r\n<style>\r\n.info {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n</style>\r\n","<script>\n\timport Login from './LoginScreen.svelte';\n\timport DungeonView from './DungeonView.svelte'\n\timport { game } from './stores.js';\n</script>\n\n{#if $game.id == -1}\n\t<Login />\n{:else}\n\t<DungeonView />\n{/if}\n\n\n<style>\n:global(:root) {\n\t--bg-color: #ffffff;\n\t--bg-secondary-color: #f3f3f6;\n\t--color-primary: #14854F;\n\t--color-lightGrey: #d2d6dd;\n\t--color-grey: #747681;\n\t--color-darkGrey: #3f4144;\n\t--color-error: #d43939;\n\t--color-success: #28bd14;\n\t--grid-maxWidth: 120rem;\n\t--grid-gutter: 2rem;\n\t--font-size: 1.6rem;\n\t--font-color: #333;\n\t--font-family-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t--font-family-mono: monaco, \"Consolas\", \"Lucida Console\", monospace;\n}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","bind","index","props","bound","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","game","id","host","socketConnection","sendRequest","reject","xmlhttp","XMLHttpRequest","onload","status","JSON","parse","responseText","console","log","open","setRequestHeader","send","openSocket","gameID","playerID","WebSocket","onopen","action","pid","gid","stringify","onmessage","playerName","user","g","playerNames","room","thisPlayer","isMaster","dungeon","rects","find","x","y","w","h","visible","doors","showDoor","door","close","get","doorIndex","findIndex","roomIndex","hideRoom","gameName","answer","masterName","createGame","isError","alert","error","$game","isYou","player","joinGame","width","innerWidth","height","innerHeight","pixelRatio","devicePixelRatio","canvas","cam","dx","dy","time","tileSize","colors","background","rooms","array","reduce","dict","deriveObject","Symbol","renderable","render","api","getContext","mounted","setup","remove","clickStart","frame","killLoopOnError","attributes","mouseDown","mouseX","mouseY","listeners","canvasStore","contextStore","elapsed","lastTime","performance","now","loop","requestAnimationFrame","beginTime","dt","cancelAnimationFrame","createLoop","save","translate","$cam","scale","$pixelRatio","entity","$props","err","warn","restore","setContext","sort","e1","e2","idx","dispatch","ev","Date","tileX","$tileSize","tileY","clientX","clientY","color","$colors","pr","offX","floor","ceil","offY","min","beginPath","strokeStyle","moveTo","lineTo","stroke","clearRect","fillStyle","fillRect","dimension","rotunda","ellipse","PI","closePath","lineWidth","strokeRect","drawSmallWay","abs","dir","drawDoor","drawStair","lineLength","lineDistance","drawHidden","files","hover","binfile","reader","FileReader","evt","minX","minY","readAsText","dummy","body","select","execCommand","dataStr","sendHideRoom","sendHideDoor","sendShowRoom","sendShowDoor","mouse"],"mappings":"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"}